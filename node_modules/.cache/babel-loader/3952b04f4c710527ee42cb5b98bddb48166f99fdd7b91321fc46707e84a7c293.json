{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonha\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\potpolio\\\\icutd\\\\src\\\\components\\\\main\\\\FeedSlide.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback, useRef } from \"react\";\nimport data from '../../data.json';\nimport React from \"react\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst feedData = data.feed;\n// 데이터의 카테고리만 배열 생성\nconst dataCategori = feedData.map(el => el.categori);\n// 데이터의 카테고리중 중복되는 값 제거 해서 배열 생성\nconst categoriList = dataCategori.filter((el, index) => dataCategori.indexOf(el) === index);\nexport default function FeedSlide() {\n  _s();\n  const slickRef = useRef(null);\n  const previous = useCallback(() => slickRef.current.slickPrev(), []);\n  const next = useCallback(() => slickRef.current.slickNext(), []);\n  const settings = {\n    autoplay: false,\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    arrows: false,\n    responsive: [{\n      breakpoint: 640,\n      settings: {\n        slidesToShow: 1\n      }\n    }]\n  };\n  const [ListActive, setListActive] = useState('ALL');\n  // 초기로딩시 tap-menu 요소중 ALL요소에 active 클래스를 주기위해  State의 기본값으로 'ALL'적용.\n  const newFeed = ListActive === 'ALL' ? feedData : feedData.filter(el => el.categori === ListActive);\n  // tap-item 을 클릭시에 랜더링후 feed에 표시될 데이터를 새로 정렬해서 newFeed변수에 담아준다.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tap-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setListActive('ALL'),\n        className: 'tap-item' + (ListActive === 'ALL' ? ' active' : ''),\n        children: \"ALL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), categoriList.map((el, index) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setListActive(el),\n          className: `tap-item ` + (ListActive === el ? 'active' : ''),\n          children: el.toUpperCase()\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 16\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedSlide-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-prev\",\n        onClick: previous\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-next\",\n        onClick: next\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        ...settings,\n        ref: slickRef,\n        children: newFeed.map((el, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slide-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: el.image,\n                alt: el.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: el.categori === 'NOTICE' ? '공지사항' : `${el.categori}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 20\n                }, this), \"I \", el.text]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(FeedSlide, \"yu30YsWxGM8LxyYgv6C3izH5xqY=\");\n_c = FeedSlide;\nvar _c;\n$RefreshReg$(_c, \"FeedSlide\");","map":{"version":3,"names":["useState","useCallback","useRef","data","React","Slider","jsxDEV","_jsxDEV","Fragment","_Fragment","feedData","feed","dataCategori","map","el","categori","categoriList","filter","index","indexOf","FeedSlide","_s","slickRef","previous","current","slickPrev","next","slickNext","settings","autoplay","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","responsive","breakpoint","ListActive","setListActive","newFeed","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","ref","src","image","alt","title","text","_c","$RefreshReg$"],"sources":["C:/Users/sonha/OneDrive/바탕 화면/potpolio/icutd/src/components/main/FeedSlide.jsx"],"sourcesContent":["import { useState , useCallback ,useRef } from \"react\";\r\nimport data from '../../data.json';\r\nimport React from \"react\";\r\nimport Slider from \"react-slick\"\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nconst feedData = data.feed;\r\n// 데이터의 카테고리만 배열 생성\r\nconst dataCategori = feedData.map((el) => el.categori)\r\n// 데이터의 카테고리중 중복되는 값 제거 해서 배열 생성\r\nconst categoriList = dataCategori.filter((el,index) => dataCategori.indexOf(el) === index)\r\n\r\nexport default function FeedSlide () {\r\n  \r\n  const slickRef = useRef(null);\r\n  const previous = useCallback(() => slickRef.current.slickPrev(), []);\r\n  const next = useCallback(() => slickRef.current.slickNext(), []);\r\n\r\n  const settings = {\r\n    autoplay : false,\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    arrows:false,\r\n    responsive:[\r\n      {\r\n        breakpoint:640,\r\n        settings:{\r\n          slidesToShow:1\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  const [ListActive,setListActive] = useState('ALL')\r\n  // 초기로딩시 tap-menu 요소중 ALL요소에 active 클래스를 주기위해  State의 기본값으로 'ALL'적용.\r\n  const newFeed = ListActive === 'ALL' ? feedData : feedData.filter((el) => el.categori === ListActive)\r\n  // tap-item 을 클릭시에 랜더링후 feed에 표시될 데이터를 새로 정렬해서 newFeed변수에 담아준다.\r\n  return (\r\n    <>\r\n    <div className=\"tap-container\">\r\n      <button onClick={() => setListActive('ALL')} className={'tap-item' + (ListActive === 'ALL' ? ' active' : '')}>ALL</button>\r\n      {categoriList.map((el,index)=>{\r\n        return <button onClick={() => setListActive(el)} key={index} className={`tap-item ` + (ListActive === el ? 'active' : '')}  >{el.toUpperCase()}</button>\r\n      })}\r\n    </div>\r\n    <div className=\"feedSlide-container\">\r\n      <button className=\"btn-prev\" onClick={previous}></button>\r\n      <button className=\"btn-next\" onClick={next}></button>\r\n      <Slider {...settings} ref={slickRef}>\r\n      {newFeed.map((el,index)=> {\r\n        return (\r\n          <div className=\"slide-item\" key={index}>\r\n              <div>\r\n                <img src={el.image} alt={el.title} />\r\n                <p><strong>{(el.categori === 'NOTICE' ? '공지사항' :  `${el.categori}`)}</strong>I {el.text}</p>\r\n              </div>\r\n          </div>\r\n        )\r\n      })}\r\n      </Slider>\r\n    </div>\r\n    </> \r\n  )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}