{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonha\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\potpolio\\\\icutd\\\\src\\\\page\\\\FanZone\\\\cheerSong.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport Banner from \"../../components/Banner\";\nimport data from \"../../data.json\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cheerSongs = data.cheerSong;\nexport default function CheerSong() {\n  _s();\n  const [isActive, setIsActive] = useState(Array(cheerSongs.length).fill(false));\n\n  // 현재 재생중인 곡을 저장해두기위한 state 생성\n  const [currentSong, setCurrentSong] = useState(null);\n  // audio dom 요소를 컨트롤 하기위해 useRef를 담고 있는 변수 생성\n  // 기본값은 null로 설정 클릭하면 해당 오디오를 참조.\n  const audioRef = useRef(null);\n  // 파라미터로 mp3의 파일경로를 받고\n  // if 문으로 currentSong === mp3 일때 즉,현재 음악이 재생중인 상태\n  // 일때 ref의 current 프로퍼티로 접근해서 audio에 pause();함수 실행 < 재생정지.\n  // setCurrentSong(null) 정지상태니까 currentSong 현재 재생중인 음악이 없음을 나타내는  null 로 초기화해준다.\n  // else문으로 재생중이 아닐때 ref의 current 프로퍼티의 audio src 프로퍼티에 접근\n  // 파라미터로 받은 mp3 경로를 넣어준다. 그럼 ref가 가지고 있는 audio 파일이 지정된다.\n  // ref의 current 프로퍼티 즉 audio에 접근해서 audio에 play(); 함수 실행 < 곡 재생.\n  // setCurrentSong(mp3) 재생중인 음악을 currentSong 값으로 mp3의 파일경로를 넣어준다.\n  function playMusic(mp3) {\n    if (currentSong === mp3) {\n      audioRef.current.pause();\n      setCurrentSong(null);\n    } else {\n      audioRef.current.src = mp3;\n      audioRef.current.play();\n      setCurrentSong(mp3);\n    }\n  }\n  ;\n  function handleClick(index) {\n    let temp = isActive.slice();\n    if (temp[index] && currentSong) {\n      temp[index] = false;\n      return setIsActive(temp);\n    }\n    temp[index] = true;\n    return setIsActive(temp);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      aniWidth: \"65%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"cheearSongArea size1442\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"hiddenH2\",\n        children: \"\\uC751\\uC6D0\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: cheerSongs.map((el, index) => {\n          return /*#__PURE__*/_jsxDEV(\"details\", {\n            onClick: () => handleClick(index),\n            className: isActive[index] && \"active\",\n            children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n              children: [el.title, /*#__PURE__*/_jsxDEV(\"button\", {\n                className: currentSong === el.mp3 && \"playing\",\n                onClick: () => {\n                  playMusic(el.mp3, index)();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n                ref: audioRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [!el.text ? \"가사가 없습니다.\" : el.text.map((i, index) => {\n                return i ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: i\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 63\n                }, this) : /*#__PURE__*/_jsxDEV(\"br\", {}, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 88\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"\\uC751\\uC6D0\\uAC00 \\uB2E4\\uC6B4\\uBC1B\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(CheerSong, \"Uc65oosYgxQgxnVwBoM3JKQEfUY=\");\n_c = CheerSong;\nvar _c;\n$RefreshReg$(_c, \"CheerSong\");","map":{"version":3,"names":["React","useRef","useState","Banner","data","jsxDEV","_jsxDEV","Fragment","_Fragment","cheerSongs","cheerSong","CheerSong","_s","isActive","setIsActive","Array","length","fill","currentSong","setCurrentSong","audioRef","playMusic","mp3","current","pause","src","play","handleClick","index","temp","slice","children","aniWidth","fileName","_jsxFileName","lineNumber","columnNumber","className","map","el","onClick","title","ref","text","i","_c","$RefreshReg$"],"sources":["C:/Users/sonha/OneDrive/바탕 화면/potpolio/icutd/src/page/FanZone/cheerSong.jsx"],"sourcesContent":["import React, { useRef,useState } from 'react';\r\nimport Banner from \"../../components/Banner\"\r\nimport data from \"../../data.json\"\r\n\r\nconst cheerSongs = data.cheerSong;\r\n\r\nexport default function CheerSong(){\r\n\r\nconst [isActive , setIsActive] = useState(Array(cheerSongs.length).fill(false));\r\n\r\n\r\n// 현재 재생중인 곡을 저장해두기위한 state 생성\r\nconst [currentSong, setCurrentSong] = useState(null);\r\n// audio dom 요소를 컨트롤 하기위해 useRef를 담고 있는 변수 생성\r\n// 기본값은 null로 설정 클릭하면 해당 오디오를 참조.\r\nconst audioRef = useRef(null);\r\n// 파라미터로 mp3의 파일경로를 받고\r\n// if 문으로 currentSong === mp3 일때 즉,현재 음악이 재생중인 상태\r\n// 일때 ref의 current 프로퍼티로 접근해서 audio에 pause();함수 실행 < 재생정지.\r\n// setCurrentSong(null) 정지상태니까 currentSong 현재 재생중인 음악이 없음을 나타내는  null 로 초기화해준다.\r\n// else문으로 재생중이 아닐때 ref의 current 프로퍼티의 audio src 프로퍼티에 접근\r\n// 파라미터로 받은 mp3 경로를 넣어준다. 그럼 ref가 가지고 있는 audio 파일이 지정된다.\r\n// ref의 current 프로퍼티 즉 audio에 접근해서 audio에 play(); 함수 실행 < 곡 재생.\r\n// setCurrentSong(mp3) 재생중인 음악을 currentSong 값으로 mp3의 파일경로를 넣어준다.\r\nfunction playMusic (mp3) {\r\n        if (currentSong === mp3) {\r\n            audioRef.current.pause();\r\n            setCurrentSong(null);\r\n          } else {\r\n            audioRef.current.src = mp3;\r\n            audioRef.current.play();\r\n            setCurrentSong(mp3);}\r\n};\r\n\r\nfunction handleClick(index) {\r\nlet temp = isActive.slice();\r\nif(temp[index] && currentSong){\r\n    temp[index] = false;\r\n    return setIsActive(temp);\r\n}\r\ntemp[index] = true;\r\nreturn setIsActive(temp);\r\n}\r\n\r\n    return (\r\n        <>\r\n        <Banner aniWidth={\"65%\"} />\r\n        <section className=\"cheearSongArea size1442\">\r\n            <h2 className=\"hiddenH2\">응원가</h2>\r\n            <div>{cheerSongs.map((el,index) => {\r\n                return (\r\n                    <details onClick={() => handleClick(index)} key={index} className={isActive[index] && \"active\"}>\r\n                    <summary>{el.title}\r\n                        <button className={currentSong === el.mp3 && \"playing\"} onClick={()=> { playMusic(el.mp3,index)()}}></button>\r\n                        <audio ref={audioRef}></audio>\r\n                    </summary>\r\n                    <div>{!el.text ? \"가사가 없습니다.\" : \r\n                        el.text.map((i,index)=> { return (i ? <p key={index}>{i}</p> : <br key={index} />)})}\r\n                        <button>응원가 다운받기</button>\r\n                    </div>\r\n                    </details>)})}                \r\n            </div>\r\n        </section>\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAACC,QAAQ,QAAQ,OAAO;AAC9C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,IAAI,MAAM,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,UAAU,GAAGL,IAAI,CAACM,SAAS;AAEjC,eAAe,SAASC,SAASA,CAAA,EAAE;EAAAC,EAAA;EAEnC,MAAM,CAACC,QAAQ,EAAGC,WAAW,CAAC,GAAGZ,QAAQ,CAACa,KAAK,CAACN,UAAU,CAACO,MAAM,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC;;EAG/E;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACpD;EACA;EACA,MAAMkB,QAAQ,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAC7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAASoB,SAASA,CAAEC,GAAG,EAAE;IACjB,IAAIJ,WAAW,KAAKI,GAAG,EAAE;MACrBF,QAAQ,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC;MACxBL,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,MAAM;MACLC,QAAQ,CAACG,OAAO,CAACE,GAAG,GAAGH,GAAG;MAC1BF,QAAQ,CAACG,OAAO,CAACG,IAAI,CAAC,CAAC;MACvBP,cAAc,CAACG,GAAG,CAAC;IAAC;EAChC;EAAC;EAED,SAASK,WAAWA,CAACC,KAAK,EAAE;IAC5B,IAAIC,IAAI,GAAGhB,QAAQ,CAACiB,KAAK,CAAC,CAAC;IAC3B,IAAGD,IAAI,CAACD,KAAK,CAAC,IAAIV,WAAW,EAAC;MAC1BW,IAAI,CAACD,KAAK,CAAC,GAAG,KAAK;MACnB,OAAOd,WAAW,CAACe,IAAI,CAAC;IAC5B;IACAA,IAAI,CAACD,KAAK,CAAC,GAAG,IAAI;IAClB,OAAOd,WAAW,CAACe,IAAI,CAAC;EACxB;EAEI,oBACIvB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACAzB,OAAA,CAACH,MAAM;MAAC6B,QAAQ,EAAE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3B9B,OAAA;MAAS+B,SAAS,EAAC,yBAAyB;MAAAN,QAAA,gBACxCzB,OAAA;QAAI+B,SAAS,EAAC,UAAU;QAAAN,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjC9B,OAAA;QAAAyB,QAAA,EAAMtB,UAAU,CAAC6B,GAAG,CAAC,CAACC,EAAE,EAACX,KAAK,KAAK;UAC/B,oBACItB,OAAA;YAASkC,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAACC,KAAK,CAAE;YAAaS,SAAS,EAAExB,QAAQ,CAACe,KAAK,CAAC,IAAI,QAAS;YAAAG,QAAA,gBAC/FzB,OAAA;cAAAyB,QAAA,GAAUQ,EAAE,CAACE,KAAK,eACdnC,OAAA;gBAAQ+B,SAAS,EAAEnB,WAAW,KAAKqB,EAAE,CAACjB,GAAG,IAAI,SAAU;gBAACkB,OAAO,EAAEA,CAAA,KAAK;kBAAEnB,SAAS,CAACkB,EAAE,CAACjB,GAAG,EAACM,KAAK,CAAC,CAAC,CAAC;gBAAA;cAAE;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,eAC7G9B,OAAA;gBAAOoC,GAAG,EAAEtB;cAAS;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC,eACV9B,OAAA;cAAAyB,QAAA,GAAM,CAACQ,EAAE,CAACI,IAAI,GAAG,WAAW,GACxBJ,EAAE,CAACI,IAAI,CAACL,GAAG,CAAC,CAACM,CAAC,EAAChB,KAAK,KAAI;gBAAE,OAAQgB,CAAC,gBAAGtC,OAAA;kBAAAyB,QAAA,EAAgBa;gBAAC,GAAThB,KAAK;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,gBAAG9B,OAAA,WAASsB,KAAK;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAC,CAAC,CAAC,eACpF9B,OAAA;gBAAAyB,QAAA,EAAQ;cAAQ;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxB,CAAC;UAAA,GAR2CR,KAAK;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAS7C,CAAC;QAAC,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA,eACR,CAAC;AAEX;AAACxB,EAAA,CA3DuBD,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}