{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react'; // React와 useState 훅을 가져옵니다.\nimport Calendar from 'react-calendar'; // react-calendar 컴포넌트를 가져옵니다.\nimport 'react-calendar/dist/Calendar.css'; // 기본 제공되는 CSS 파일을 가져옵니다.\nimport { format, isSameDay } from 'date-fns'; // date-fns의 format과 isSameDay 함수를 가져옵니다.\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Calenderkk({\n  schedules\n}) {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date()); // 선택된 날짜를 상태로 관리합니다. 기본값은 오늘 날짜입니다.\n  // date-fns의 isSameDay를 사용해 선택된 날짜에 해당하는 스케줄을 필터링합니다.\n  const filteredSchedules = schedules.filter(schedule => isSameDay(new Date(schedule.date), selectedDate) // 두 날짜가 같은지 확인합니다.\n  );\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Calenderkk, \"mu4fg2bVP7ctA7Sx6pVThSFlyto=\");\n_c = Calenderkk;\nconst schedules = [\n// 예시 스케줄 데이터\n{\n  id: 1,\n  date: '2024-09-25',\n  title: '프로젝트 회의'\n}, {\n  id: 2,\n  date: '2024-09-25',\n  title: '팀 점심 식사'\n}, {\n  id: 3,\n  date: '2024-09-27',\n  title: '데이터 분석 워크숍'\n}, {\n  id: 4,\n  date: '2024-09-28',\n  title: '친구와의 저녁 약속'\n}, {\n  id: 5,\n  date: '2024-09-29',\n  title: '운동하기'\n}, {\n  id: 6,\n  date: '2024-10-01',\n  title: '프로젝트 마감일'\n}, {\n  id: 7,\n  date: '2024-10-05',\n  title: '가족 모임'\n}, {\n  id: 8,\n  date: '2024-10-10',\n  title: '의사 예약'\n}];\nvar _c;\n$RefreshReg$(_c, \"Calenderkk\");","map":{"version":3,"names":["React","useState","Calendar","format","isSameDay","Fragment","_Fragment","jsxDEV","_jsxDEV","Calenderkk","schedules","_s","selectedDate","setSelectedDate","Date","filteredSchedules","filter","schedule","date","_c","id","title","$RefreshReg$"],"sources":["C:/Users/sonha/OneDrive/바탕 화면/inchoen/icutd/src/components/player/Calender.jsx"],"sourcesContent":["import React, { useState } from 'react';  // React와 useState 훅을 가져옵니다.\r\nimport Calendar from 'react-calendar';  // react-calendar 컴포넌트를 가져옵니다.\r\nimport 'react-calendar/dist/Calendar.css';  // 기본 제공되는 CSS 파일을 가져옵니다.\r\nimport { format, isSameDay } from 'date-fns';  // date-fns의 format과 isSameDay 함수를 가져옵니다.\r\n\r\n\r\nexport default function Calenderkk({schedules}){\r\n\r\n    const [selectedDate, setSelectedDate] = useState(new Date());  // 선택된 날짜를 상태로 관리합니다. 기본값은 오늘 날짜입니다.\r\n    // date-fns의 isSameDay를 사용해 선택된 날짜에 해당하는 스케줄을 필터링합니다.\r\n    const filteredSchedules = schedules.filter(schedule =>\r\n      isSameDay(new Date(schedule.date), selectedDate)  // 두 날짜가 같은지 확인합니다.\r\n    );\r\n    return (\r\n        <>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst schedules = [  // 예시 스케줄 데이터\r\n    {\r\n      id: 1,\r\n      date: '2024-09-25',\r\n      title: '프로젝트 회의',\r\n    },\r\n    {\r\n      id: 2,\r\n      date: '2024-09-25',\r\n      title: '팀 점심 식사',\r\n    },\r\n    {\r\n      id: 3,\r\n      date: '2024-09-27',\r\n      title: '데이터 분석 워크숍',\r\n    },\r\n    {\r\n      id: 4,\r\n      date: '2024-09-28',\r\n      title: '친구와의 저녁 약속',\r\n    },\r\n    {\r\n      id: 5,\r\n      date: '2024-09-29',\r\n      title: '운동하기',\r\n    },\r\n    {\r\n      id: 6,\r\n      date: '2024-10-01',\r\n      title: '프로젝트 마감일',\r\n    },\r\n    {\r\n      id: 7,\r\n      date: '2024-10-05',\r\n      title: '가족 모임',\r\n    },\r\n    {\r\n      id: 8,\r\n      date: '2024-10-10',\r\n      title: '의사 예약',\r\n    },\r\n  ];"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAE;AAC1C,OAAOC,QAAQ,MAAM,gBAAgB,CAAC,CAAE;AACxC,OAAO,kCAAkC,CAAC,CAAE;AAC5C,SAASC,MAAM,EAAEC,SAAS,QAAQ,UAAU,CAAC,CAAE;AAAA,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAG/C,eAAe,SAASC,UAAUA,CAAC;EAACC;AAAS,CAAC,EAAC;EAAAC,EAAA;EAE3C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAIa,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE;EAC/D;EACA,MAAMC,iBAAiB,GAAGL,SAAS,CAACM,MAAM,CAACC,QAAQ,IACjDb,SAAS,CAAC,IAAIU,IAAI,CAACG,QAAQ,CAACC,IAAI,CAAC,EAAEN,YAAY,CAAC,CAAE;EACpD,CAAC;EACD,oBACIJ,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAGX;AAACK,EAAA,CAbuBF,UAAU;AAAAU,EAAA,GAAVV,UAAU;AAgBlC,MAAMC,SAAS,GAAG;AAAG;AACjB;EACEU,EAAE,EAAE,CAAC;EACLF,IAAI,EAAE,YAAY;EAClBG,KAAK,EAAE;AACT,CAAC,EACD;EACED,EAAE,EAAE,CAAC;EACLF,IAAI,EAAE,YAAY;EAClBG,KAAK,EAAE;AACT,CAAC,EACD;EACED,EAAE,EAAE,CAAC;EACLF,IAAI,EAAE,YAAY;EAClBG,KAAK,EAAE;AACT,CAAC,EACD;EACED,EAAE,EAAE,CAAC;EACLF,IAAI,EAAE,YAAY;EAClBG,KAAK,EAAE;AACT,CAAC,EACD;EACED,EAAE,EAAE,CAAC;EACLF,IAAI,EAAE,YAAY;EAClBG,KAAK,EAAE;AACT,CAAC,EACD;EACED,EAAE,EAAE,CAAC;EACLF,IAAI,EAAE,YAAY;EAClBG,KAAK,EAAE;AACT,CAAC,EACD;EACED,EAAE,EAAE,CAAC;EACLF,IAAI,EAAE,YAAY;EAClBG,KAAK,EAAE;AACT,CAAC,EACD;EACED,EAAE,EAAE,CAAC;EACLF,IAAI,EAAE,YAAY;EAClBG,KAAK,EAAE;AACT,CAAC,CACF;AAAC,IAAAF,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}