{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonha\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\potpolio\\\\icutd\\\\src\\\\components\\\\player\\\\Calender.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { format, addMonths, subMonths, addYears, subYears, getDaysInMonth, startOfMonth, addDays, startOfDay, subDays, endOfDay, endOfMonth } from 'date-fns';\nimport { ko } from 'date-fns/locale';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Calendar() {\n  _s();\n  // 1.오늘 날짜를 가져온다.\n  const today = new Date();\n  // 2. 현재 달력에 표시하는 날짜의 기본값을 오늘날짜로 useState 를 사용해서 지정한다.\n  const [currentDate, setCurrentDate] = useState(today);\n  // 3. 날짜 연도 이동을 위한 click event 함수를 만든다.\n\n  // subMonths 함수 : 첫번째 인자에서 두번째 넘겨준 인자만큼 월을 감소시킨다.\n  // currenDate : 초기 오늘날짜의 달 에서 -1 \n  const handlePrevMonth = () => {\n    setCurrentDate(subMonths(currentDate, 1));\n  };\n  // addMonths 함수 : 첫번째 인자에서 두번째 넘겨준 인자만큼 월을 증가시킨다.\n  const handleNextMonth = () => {\n    setCurrentDate(addMonths(currentDate, 1));\n  };\n  // subYears 함수 : 첫번째 인자에서 두번째 넘겨준 인자만큼 연도를 감소시킨다.\n  const handlePrevYear = () => {\n    setCurrentDate(subYears(currentDate, 1));\n  };\n  // addYears 함수 : 첫번째 인자에서 두번째 넘겨준 인자만큼 연도를 증가시킨다.\n  const handleNextYear = () => {\n    setCurrentDate(addYears(currentDate, 1));\n  };\n\n  // 현재 달력의 시작 날짜정보\n  const startDate = startOfMonth(currentDate);\n  // 현재 달력의 시작요일 정보\n  // 일 7 월 1 화 2 수 3 목 4 금 5 토 6\n  const startDayOfWeek = format(startDate, 'i');\n  // 현재달이 몇일 까지 구성돼 있는지\n\n  console.log(startDayOfWeek);\n  const daysInMonth = getDaysInMonth(currentDate);\n  const preMonthDays = startDayOfWeek !== 7 ? [...Array(startDayOfWeek)].map((_, index) => {\n    return subDays(startDate, startDayOfWeek - index);\n  }) : [];\n  const currentMonthDays = [...Array(daysInMonth)].map((_, index) => {\n    return addDays(startDate, index);\n  });\n  const remainingDays = 35 - (preMonthDays.length + currentMonthDays.length);\n  const nextMonthDays = [...Array(remainingDays)].map((_, index) => {\n    return addDays(endOfMonth(currentDate), index + 1);\n  });\n  const calendarTiles = [...preMonthDays, ...currentMonthDays, ...nextMonthDays];\n  const tiles = calendarTiles.map(el => {\n    return format(el, 'd');\n  });\n  console.log(tiles);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevYear,\n        children: \"\\uC774\\uC804\\uC5F0\\uB3C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: format(currentDate, 'yyyy', {\n          locale: ko\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextYear,\n        children: \"\\uB2E4\\uC74C\\uC5F0\\uB3C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevMonth,\n        children: \"\\uC774\\uC804 \\uB2EC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: format(currentDate, 'MM', {\n          locale: ko\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextMonth,\n        children: \"\\uB2E4\\uC74C \\uB2EC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tiles.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: el\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Calendar, \"5+VfrEH3UH+oLFHl1umRoWIon1k=\");\n_c = Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["useState","format","addMonths","subMonths","addYears","subYears","getDaysInMonth","startOfMonth","addDays","startOfDay","subDays","endOfDay","endOfMonth","ko","jsxDEV","_jsxDEV","Fragment","_Fragment","Calendar","_s","today","Date","currentDate","setCurrentDate","handlePrevMonth","handleNextMonth","handlePrevYear","handleNextYear","startDate","startDayOfWeek","console","log","daysInMonth","preMonthDays","Array","map","_","index","currentMonthDays","remainingDays","length","nextMonthDays","calendarTiles","tiles","el","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","locale","_c","$RefreshReg$"],"sources":["C:/Users/sonha/OneDrive/바탕 화면/potpolio/icutd/src/components/player/Calender.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { format, addMonths, subMonths, addYears, subYears, getDaysInMonth, startOfMonth, addDays, startOfDay, subDays, endOfDay, endOfMonth } from 'date-fns';\r\nimport { ko } from 'date-fns/locale';\r\n\r\n\r\nexport default function Calendar () {\r\n  \r\n  // 1.오늘 날짜를 가져온다.\r\n  const today = new Date(); \r\n  // 2. 현재 달력에 표시하는 날짜의 기본값을 오늘날짜로 useState 를 사용해서 지정한다.\r\n  const [currentDate , setCurrentDate] = useState(today);\r\n  // 3. 날짜 연도 이동을 위한 click event 함수를 만든다.\r\n  \r\n  // subMonths 함수 : 첫번째 인자에서 두번째 넘겨준 인자만큼 월을 감소시킨다.\r\n  // currenDate : 초기 오늘날짜의 달 에서 -1 \r\n  const handlePrevMonth = () => {\r\n    setCurrentDate(subMonths(currentDate,1));\r\n  }\r\n  // addMonths 함수 : 첫번째 인자에서 두번째 넘겨준 인자만큼 월을 증가시킨다.\r\n  const handleNextMonth = () => {\r\n    setCurrentDate(addMonths(currentDate,1));\r\n  }\r\n  // subYears 함수 : 첫번째 인자에서 두번째 넘겨준 인자만큼 연도를 감소시킨다.\r\n  const handlePrevYear = () =>  {\r\n    setCurrentDate(subYears(currentDate,1));\r\n  }\r\n  // addYears 함수 : 첫번째 인자에서 두번째 넘겨준 인자만큼 연도를 증가시킨다.\r\n  const handleNextYear = () =>  {\r\n    setCurrentDate(addYears(currentDate,1));\r\n  }\r\n  \r\n  // 현재 달력의 시작 날짜정보\r\n  const startDate = startOfMonth(currentDate);\r\n  // 현재 달력의 시작요일 정보\r\n  // 일 7 월 1 화 2 수 3 목 4 금 5 토 6\r\n  const startDayOfWeek = format(startDate, 'i');\r\n  // 현재달이 몇일 까지 구성돼 있는지\r\n\r\n  console.log(startDayOfWeek);\r\n  const daysInMonth = getDaysInMonth(currentDate);\r\n  \r\n  const preMonthDays = startDayOfWeek !== 7 ? [...Array(startDayOfWeek)].map((_,index)=> {\r\n    return subDays(startDate,startDayOfWeek - index);\r\n  }) : [];\r\n\r\n  const currentMonthDays = [...Array(daysInMonth)].map((_,index) => {\r\n    return addDays(startDate,index);\r\n  })\r\n\r\n\r\n  const remainingDays = 35 - (preMonthDays.length + currentMonthDays.length);\r\n  const nextMonthDays = [...Array(remainingDays)].map((_,index) => {\r\n    return addDays(endOfMonth(currentDate), index + 1) \r\n  })\r\n\r\n  const calendarTiles = [...preMonthDays,...currentMonthDays,...nextMonthDays];\r\n\r\n  const tiles = calendarTiles.map((el)=> {\r\n    return format(el,'d');\r\n  })\r\n\r\n  console.log(tiles);\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n      <button onClick={handlePrevYear}>이전연도</button>\r\n      <span>{format(currentDate , 'yyyy' , {locale:ko})}</span>\r\n      <button onClick={handleNextYear}>다음연도</button>\r\n    </div>\r\n    <div>\r\n      <button onClick={handlePrevMonth}>이전 달</button>\r\n      <span>{format(currentDate, 'MM', { locale: ko })}</span>\r\n      <button onClick={handleNextMonth}>다음 달</button>\r\n    </div>\r\n    <div>\r\n      {tiles.map((el)=> {\r\n        return <span>{el}</span>\r\n      })}\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}