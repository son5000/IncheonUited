{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonha\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\inchoen\\\\icutd\\\\src\\\\components\\\\club\\\\PageBox.jsx\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport Banner from '../Banner';\nimport data from '../../data.json';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst introductionTabs = data.introductionTabs;\nconst stadiumTabs = data.stadiumTabs;\n// sub page > club Layout\nexport default function PageBox({\n  children,\n  aniWidth\n}) {\n  _s();\n  const location = useLocation();\n  const secondLocation = location.pathname.split('/')[2];\n  //sub > club 안의 categori 안에서 introduction 과 stadium 요소는 \n  // 각각의 다른 하위 tabmenu 를가지고 있다.\n  // 그래서 이전에는 props 로 특정한 값 ('menutext') 을 내려줘서 그와 같은 value 를 가지는 tab요소들에게\n  // active class 를 부여해 이펙트를 효과를 줬다.\n  // 이런식으로 진행하다보니 props 로 내려주는 값들이 너무 많아졌다.\n  // 그래서 새로 알게 된 기술인 useLocation 훅과 NavLink 컴포넌트를 사용하기로 했다.\n\n  // 첫번째로 NavLink 를 바로 적용했는데 기본적으로 NavLink 는  click 이벤트를 주면 현재 path 값을 참조하여 active class 가 자동으로 들어간다.\n  // 그런데 이렇게 진행하니 문제가 tabmenu 첫번째 요소는 path 값이 상위 path 값만을 가지고 있어서 현재와 동일한 path 값으로 인식이 되는지\n  // 계속 active 가 들어간 상태가 된다. \n  // 그래서 방법으로 이것저것 계속 생각하다가 NavLink 를 사용하지 않고 Link 컴포넌트를 사용해서\n  // 토글 클래스 방식으로  location 으로 현재 path 값을 받아와 tab 요소가 가지고 있는 path 값과 비교해서 같은 때만 \n  // className = {location.pathName == el.link && 'active'} active class 를 부여하는 방법으로 진행했다.\n  // 큰 문제는 없을것 같은데 편하게 active 요소를 구현하라고 만든 방법을 사용을 못해서 다음에 조금 더 공부해 봐야겠다는 생각이 들었다.\n\n  let h2text = '';\n  if (secondLocation === 'introduction') {\n    h2text = false;\n  } else if (secondLocation === 'stadium') {\n    h2text = 'Inchoen Football Stadium';\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      aniWidth: aniWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"size1442\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: h2text || /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"\\uC778\\uCC9C,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 34\n          }, this), \"\\uD55C\\uACC4\\uB97C \\uB3CC\\uD30C\\uD558\\uB77C!\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n          children: secondLocation === 'introduction' ? introductionTabs.map((el, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: location.pathname === el.link ? 'active' : '',\n              to: el.link,\n              children: el.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 76\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 56\n          }, this)) : stadiumTabs.map((el, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: location.pathname === el.link ? 'active' : '',\n              to: el.link,\n              children: el.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 72\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 52\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(PageBox, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = PageBox;\nvar _c;\n$RefreshReg$(_c, \"PageBox\");","map":{"version":3,"names":["Link","Banner","data","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","introductionTabs","stadiumTabs","PageBox","children","aniWidth","_s","location","secondLocation","pathname","split","h2text","fileName","_jsxFileName","lineNumber","columnNumber","className","map","el","index","link","to","text","_c","$RefreshReg$"],"sources":["C:/Users/sonha/OneDrive/바탕 화면/inchoen/icutd/src/components/club/PageBox.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\r\nimport Banner from '../Banner';\r\nimport data from '../../data.json'\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst introductionTabs = data.introductionTabs;\r\nconst stadiumTabs = data.stadiumTabs;\r\n// sub page > club Layout\r\nexport default function PageBox ({children,aniWidth}){\r\n\r\n    const location = useLocation();\r\n    const secondLocation = location.pathname.split('/')[2]; \r\n    //sub > club 안의 categori 안에서 introduction 과 stadium 요소는 \r\n    // 각각의 다른 하위 tabmenu 를가지고 있다.\r\n    // 그래서 이전에는 props 로 특정한 값 ('menutext') 을 내려줘서 그와 같은 value 를 가지는 tab요소들에게\r\n    // active class 를 부여해 이펙트를 효과를 줬다.\r\n    // 이런식으로 진행하다보니 props 로 내려주는 값들이 너무 많아졌다.\r\n    // 그래서 새로 알게 된 기술인 useLocation 훅과 NavLink 컴포넌트를 사용하기로 했다.\r\n\r\n    // 첫번째로 NavLink 를 바로 적용했는데 기본적으로 NavLink 는  click 이벤트를 주면 현재 path 값을 참조하여 active class 가 자동으로 들어간다.\r\n    // 그런데 이렇게 진행하니 문제가 tabmenu 첫번째 요소는 path 값이 상위 path 값만을 가지고 있어서 현재와 동일한 path 값으로 인식이 되는지\r\n    // 계속 active 가 들어간 상태가 된다. \r\n    // 그래서 방법으로 이것저것 계속 생각하다가 NavLink 를 사용하지 않고 Link 컴포넌트를 사용해서\r\n    // 토글 클래스 방식으로  location 으로 현재 path 값을 받아와 tab 요소가 가지고 있는 path 값과 비교해서 같은 때만 \r\n    // className = {location.pathName == el.link && 'active'} active class 를 부여하는 방법으로 진행했다.\r\n    // 큰 문제는 없을것 같은데 편하게 active 요소를 구현하라고 만든 방법을 사용을 못해서 다음에 조금 더 공부해 봐야겠다는 생각이 들었다.\r\n\r\n    let h2text = '';\r\n    if(secondLocation === 'introduction'){\r\n        h2text = false;\r\n    }else if(secondLocation === 'stadium'){\r\n        h2text = 'Inchoen Football Stadium'\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Banner aniWidth={aniWidth} />\r\n        <div className=\"size1442\">\r\n            <h2>\r\n                {h2text || (<>인천,<br />한계를 돌파하라!</>) }\r\n                \r\n            </h2>\r\n            <div>\r\n                <aside>\r\n                    {secondLocation === 'introduction' ?\r\n                     introductionTabs.map((el,index)=> <button key={index}><Link className={location.pathname === el.link ? 'active' : ''} to={el.link}>{el.text}</Link></button>) \r\n                     :\r\n                     stadiumTabs.map((el,index) => <button key={index}><Link className={location.pathname === el.link ? 'active' : ''}  to={el.link}>{el.text}</Link></button>)}\r\n                </aside>\r\n                {children}\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}