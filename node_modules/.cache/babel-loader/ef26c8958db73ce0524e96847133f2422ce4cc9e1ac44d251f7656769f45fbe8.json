{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonha\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\potpolio\\\\icutd\\\\src\\\\components\\\\player\\\\Calender.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { format, addMonths, subMonths, addYears, subYears, getDaysInMonth, startOfMonth, addDays, startOfDay } from 'date-fns';\nimport { ko } from 'date-fns/locale';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Calendar() {\n  _s();\n  // 1.오늘 날짜를 가져온다.\n  const today = new Date();\n  // 2. 현재 달력에 표시하는 날짜의 기본값을 오늘날짜로 useState 를 사용해서 지정한다.\n  const [currentDate, setCurrentDate] = useState(today);\n  // 3. 날짜 연도 이동을 위한 click event 함수를 만든다.\n\n  // subMonths 함수 : 첫번째 인자에서 두번째 넘겨준 인자만큼 월을 감소시킨다.\n  // currenDate : 초기 오늘날짜의 달 에서 -1 \n  const handlePrevMonth = () => {\n    setCurrentDate(subMonths(currentDate, 1));\n  };\n  // addMonths 함수 : 첫번째 인자에서 두번째 넘겨준 인자만큼 월을 증가시킨다.\n  const handleNextMonth = () => {\n    setCurrentDate(addMonths(currentDate, 1));\n  };\n  // subYears 함수 : 첫번째 인자에서 두번째 넘겨준 인자만큼 연도를 감소시킨다.\n  const handlePrevYear = () => {\n    setCurrentDate(subYears(currentDate, 1));\n  };\n  // addYears 함수 : 첫번째 인자에서 두번째 넘겨준 인자만큼 연도를 증가시킨다.\n  const handleNextYear = () => {\n    setCurrentDate(addYears(currentDate, 1));\n  };\n\n  // getDaysInMonth함수에 날짜 정보를 넘겨주면 해당달이 몇 일이 까지 있는지 알 수 있다.\n  const daysInMonth = getDaysInMonth(currentDate);\n  // startOfMonth 함수로 해당 달의 시작 날짜의 정보 구한다.\n  const startDate = startOfMonth(currentDate);\n  console.log(startDate);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [...Array(daysInMonth)].map((_, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [index, format(index, 'd')]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Calendar, \"5+VfrEH3UH+oLFHl1umRoWIon1k=\");\n_c = Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["useState","format","addMonths","subMonths","addYears","subYears","getDaysInMonth","startOfMonth","addDays","startOfDay","ko","jsxDEV","_jsxDEV","Fragment","_Fragment","Calendar","_s","today","Date","currentDate","setCurrentDate","handlePrevMonth","handleNextMonth","handlePrevYear","handleNextYear","daysInMonth","startDate","console","log","children","Array","map","_","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sonha/OneDrive/바탕 화면/potpolio/icutd/src/components/player/Calender.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { format, addMonths, subMonths, addYears, subYears, getDaysInMonth, startOfMonth, addDays, startOfDay } from 'date-fns';\r\nimport { ko } from 'date-fns/locale';\r\n\r\n\r\nexport default function Calendar () {\r\n  \r\n  // 1.오늘 날짜를 가져온다.\r\n  const today = new Date(); \r\n  // 2. 현재 달력에 표시하는 날짜의 기본값을 오늘날짜로 useState 를 사용해서 지정한다.\r\n  const [currentDate , setCurrentDate] = useState(today);\r\n  // 3. 날짜 연도 이동을 위한 click event 함수를 만든다.\r\n  \r\n  // subMonths 함수 : 첫번째 인자에서 두번째 넘겨준 인자만큼 월을 감소시킨다.\r\n  // currenDate : 초기 오늘날짜의 달 에서 -1 \r\n  const handlePrevMonth = () => {\r\n    setCurrentDate(subMonths(currentDate,1));\r\n  }\r\n  // addMonths 함수 : 첫번째 인자에서 두번째 넘겨준 인자만큼 월을 증가시킨다.\r\n  const handleNextMonth = () => {\r\n    setCurrentDate(addMonths(currentDate,1));\r\n  }\r\n  // subYears 함수 : 첫번째 인자에서 두번째 넘겨준 인자만큼 연도를 감소시킨다.\r\n  const handlePrevYear = () =>  {\r\n    setCurrentDate(subYears(currentDate,1));\r\n  }\r\n  // addYears 함수 : 첫번째 인자에서 두번째 넘겨준 인자만큼 연도를 증가시킨다.\r\n  const handleNextYear = () =>  {\r\n    setCurrentDate(addYears(currentDate,1));\r\n  }\r\n  \r\n  \r\n  // getDaysInMonth함수에 날짜 정보를 넘겨주면 해당달이 몇 일이 까지 있는지 알 수 있다.\r\n  const daysInMonth = getDaysInMonth(currentDate);\r\n  // startOfMonth 함수로 해당 달의 시작 날짜의 정보 구한다.\r\n  const startDate = startOfMonth(currentDate);\r\n  console.log(startDate);\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n      {[...Array(daysInMonth)].map(( _ ,index) => {\r\n        return (\r\n          <div key = {index}>{index}\r\n          {format(index, 'd')}\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,EAAEC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,cAAc,EAAEC,YAAY,EAAEC,OAAO,EAAEC,UAAU,QAAQ,UAAU;AAC9H,SAASC,EAAE,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGrC,eAAe,SAASC,QAAQA,CAAA,EAAI;EAAAC,EAAA;EAElC;EACA,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB;EACA,MAAM,CAACC,WAAW,EAAGC,cAAc,CAAC,GAAGpB,QAAQ,CAACiB,KAAK,CAAC;EACtD;;EAEA;EACA;EACA,MAAMI,eAAe,GAAGA,CAAA,KAAM;IAC5BD,cAAc,CAACjB,SAAS,CAACgB,WAAW,EAAC,CAAC,CAAC,CAAC;EAC1C,CAAC;EACD;EACA,MAAMG,eAAe,GAAGA,CAAA,KAAM;IAC5BF,cAAc,CAAClB,SAAS,CAACiB,WAAW,EAAC,CAAC,CAAC,CAAC;EAC1C,CAAC;EACD;EACA,MAAMI,cAAc,GAAGA,CAAA,KAAO;IAC5BH,cAAc,CAACf,QAAQ,CAACc,WAAW,EAAC,CAAC,CAAC,CAAC;EACzC,CAAC;EACD;EACA,MAAMK,cAAc,GAAGA,CAAA,KAAO;IAC5BJ,cAAc,CAAChB,QAAQ,CAACe,WAAW,EAAC,CAAC,CAAC,CAAC;EACzC,CAAC;;EAGD;EACA,MAAMM,WAAW,GAAGnB,cAAc,CAACa,WAAW,CAAC;EAC/C;EACA,MAAMO,SAAS,GAAGnB,YAAY,CAACY,WAAW,CAAC;EAC3CQ,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;EAEtB,oBACEd,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACAjB,OAAA;MAAAiB,QAAA,EACG,CAAC,GAAGC,KAAK,CAACL,WAAW,CAAC,CAAC,CAACM,GAAG,CAAC,CAAEC,CAAC,EAAEC,KAAK,KAAK;QAC1C,oBACErB,OAAA;UAAAiB,QAAA,GAAoBI,KAAK,EACxBhC,MAAM,CAACgC,KAAK,EAAE,GAAG,CAAC;QAAA,GADPA,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACJ,CAAC;AAEP;AAACrB,EAAA,CA9CuBD,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}